name: Nightly Release

on:
  # TODO remove
  push:
    branches:
      - sascha-nightly

  workflow_dispatch:  # Manual trigger
  schedule:
  - cron: '0 5 * * *' # 5 AM UTC = Midnight EST

jobs:
  nightly:
    #if: ${{ github.event_name == 'workflow_dispatch' || github.repository == 'shipwright-io/build' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # To be able to get OIDC ID token to sign images.
      contents: write  # To be able to update releases.
      packages: write  # To be able to push images and signatures.

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: '1.19.x'
        check-latest: true

    # Install tools
    - uses: ko-build/setup-ko@v0.6
      with:
        version: v0.13.0
    - uses: sigstore/cosign-installer@v3

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d-%s')" >> $GITHUB_OUTPUT
    
    - name: Build image
      id: build
      run: |
        export KO_DOCKER_REPO="ghcr.io/$(tr '[:upper:]' '[:lower:]' <<<${{ github.repository_owner }})/triggers"
        IMAGE_WITH_DIGEST="$(ko build --bare --platform all --tags nightly-${{ steps.date.outputs.date }})"

        echo "image=${IMAGE_WITH_DIGEST}" >> $GITHUB_OUTPUT

    - name: Generate and upload release YAMLs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        helm template \
          --namespace=shipwright-build \
          --set="image.name=${{ steps.build.outputs.image }}" \
          --set-json 'securityContext={"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"runAsUser":1000,"runAsGroup":1000}' \
          shipwright-triggers \
          ./chart > nightly-${{ steps.date.outputs.date }}.yaml

        gh release create nightly --prerelease --title "Nightly Releases"
        gh release upload nightly nightly-${{ steps.date.outputs.date }}.yaml

    - name: Sign image
      run: |
        cosign sign \
          --annotations sha=${{ github.sha }} \
          --annotations run_id=${{ github.run_id }} \
          --annotations run_attempt=${{ github.run_attempt }} \
          --yes \
          ${{ steps.build.outputs.image }}
